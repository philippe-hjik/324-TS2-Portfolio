name: Deploy to Staging

on:
  push:
    branches:
      - main # Le workflow se déclenche uniquement sur la branche "staging"

jobs:
  deploy-staging:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Vérifier le dépôt
    - name: Checkout repository
      uses: actions/checkout@v3

    # Étape 2 : Configurer la clé SSH pour la connexion au serveur
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh # Crée le répertoire ~/.ssh s'il n'existe pas
        echo "${{ secrets.STAGING_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.STAGING_HOST }} >> ~/.ssh/known_hosts

    # Étape 3 : Copier les fichiers sur le service Apache
    - name: Deploy files to Staging
      env:
        STAGING_HOST: ${{ secrets.STAGING_HOST }}
        STAGING_USER: ${{ secrets.STAGING_USER }}
      run: |
        scp -r ./Projet "${STAGING_USER}@${STAGING_HOST}:/var/www/html"

# Étape 4 : Lancer l'application Node.js
    - name: Start Node.js Application
      env:
        STAGING_HOST: ${{ secrets.STAGING_HOST }}
        STAGING_USER: ${{ secrets.STAGING_USER }}
      run: |
        ssh "${STAGING_USER}@${STAGING_HOST}" << 'EOF'
          cd /var/www/html
          npm install # Installe les dépendances (si nécessaire)
        

    # Étape 5 : Notifier que le déploiement est terminé
    - name: Notify Deployment Success
      if: success()
      run: echo "Deployment to staging completed and app started successfully!"
